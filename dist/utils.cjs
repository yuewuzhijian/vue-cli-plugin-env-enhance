"use strict";var e=require("node:fs"),t=require("node:path"),n=require("fs"),o=require("path"),r=require("os"),s=require("crypto");function c(e){var t=Object.create(null);return e&&Object.keys(e).forEach((function(n){if("default"!==n){var o=Object.getOwnPropertyDescriptor(e,n);Object.defineProperty(t,n,o.get?o:{enumerable:!0,get:function(){return e[n]}})}})),t.default=e,Object.freeze(t)}var i,a,l=c(e),p=c(t);function u(e){return e&&e.__esModule&&Object.prototype.hasOwnProperty.call(e,"default")?e.default:e}var f,d=u(function(){if(a)return i;function e(e){return"number"==typeof e||(!!/^0x[0-9a-f]+$/i.test(e)||/^[-+]?(?:\d+(?:\.\d*)?|\.\d+)(e[-+]?\d+)?$/.test(e))}function t(e,t){return"constructor"===t&&"function"==typeof e[t]||"__proto__"===t}return a=1,i=function(n,o){o||(o={});var r={bools:{},strings:{},unknownFn:null};"function"==typeof o.unknown&&(r.unknownFn=o.unknown),"boolean"==typeof o.boolean&&o.boolean?r.allBools=!0:[].concat(o.boolean).filter(Boolean).forEach((function(e){r.bools[e]=!0}));var s={};function c(e){return s[e].some((function(e){return r.bools[e]}))}Object.keys(o.alias||{}).forEach((function(e){s[e]=[].concat(o.alias[e]),s[e].forEach((function(t){s[t]=[e].concat(s[e].filter((function(e){return t!==e})))}))})),[].concat(o.string).filter(Boolean).forEach((function(e){r.strings[e]=!0,s[e]&&[].concat(s[e]).forEach((function(e){r.strings[e]=!0}))}));var i=o.default||{},a={_:[]};function l(e,n,o){for(var s=e,c=0;c<n.length-1;c++){var i=n[c];if(t(s,i))return;void 0===s[i]&&(s[i]={}),s[i]!==Object.prototype&&s[i]!==Number.prototype&&s[i]!==String.prototype||(s[i]={}),s[i]===Array.prototype&&(s[i]=[]),s=s[i]}var a=n[n.length-1];t(s,a)||(s!==Object.prototype&&s!==Number.prototype&&s!==String.prototype||(s={}),s===Array.prototype&&(s=[]),void 0===s[a]||r.bools[a]||"boolean"==typeof s[a]?s[a]=o:Array.isArray(s[a])?s[a].push(o):s[a]=[s[a],o])}function p(t,n,o){if(!o||!r.unknownFn||function(e,t){return r.allBools&&/^--[^=]+$/.test(t)||r.strings[e]||r.bools[e]||s[e]}(t,o)||!1!==r.unknownFn(o)){var c=!r.strings[t]&&e(n)?Number(n):n;l(a,t.split("."),c),(s[t]||[]).forEach((function(e){l(a,e.split("."),c)}))}}Object.keys(r.bools).forEach((function(e){p(e,void 0!==i[e]&&i[e])}));var u=[];-1!==n.indexOf("--")&&(u=n.slice(n.indexOf("--")+1),n=n.slice(0,n.indexOf("--")));for(var f=0;f<n.length;f++){var d,v,E=n[f];if(/^--.+=/.test(E)){var g=E.match(/^--([^=]+)=([\s\S]*)$/);d=g[1];var h=g[2];r.bools[d]&&(h="false"!==h),p(d,h,E)}else if(/^--no-.+/.test(E))p(d=E.match(/^--no-(.+)/)[1],!1,E);else if(/^--.+/.test(E))d=E.match(/^--(.+)/)[1],void 0===(v=n[f+1])||/^(-|--)[^-]/.test(v)||r.bools[d]||r.allBools||s[d]&&c(d)?/^(true|false)$/.test(v)?(p(d,"true"===v,E),f+=1):p(d,!r.strings[d]||"",E):(p(d,v,E),f+=1);else if(/^-[^-]+/.test(E)){for(var y=E.slice(1,-1).split(""),b=!1,_=0;_<y.length;_++)if("-"!==(v=E.slice(_+2))){if(/[A-Za-z]/.test(y[_])&&"="===v[0]){p(y[_],v.slice(1),E),b=!0;break}if(/[A-Za-z]/.test(y[_])&&/-?\d+(\.\d*)?(e-?\d+)?$/.test(v)){p(y[_],v,E),b=!0;break}if(y[_+1]&&y[_+1].match(/\W/)){p(y[_],E.slice(_+2),E),b=!0;break}p(y[_],!r.strings[y[_]]||"",E)}else p(y[_],v,E);d=E.slice(-1)[0],b||"-"===d||(!n[f+1]||/^(-|--)[^-]/.test(n[f+1])||r.bools[d]||s[d]&&c(d)?n[f+1]&&/^(true|false)$/.test(n[f+1])?(p(d,"true"===n[f+1],E),f+=1):p(d,!r.strings[d]||"",E):(p(d,n[f+1],E),f+=1))}else if(r.unknownFn&&!1===r.unknownFn(E)||a._.push(r.strings._||!e(E)?E:Number(E)),o.stopEarly){a._.push.apply(a._,n.slice(f+1));break}}return Object.keys(i).forEach((function(e){var t,n,o;t=a,n=e.split("."),o=t,n.slice(0,-1).forEach((function(e){o=o[e]||{}})),n[n.length-1]in o||(l(a,e.split("."),i[e]),(s[e]||[]).forEach((function(t){l(a,t.split("."),i[e])})))})),o["--"]?a["--"]=u.slice():u.forEach((function(e){a._.push(e)})),a}}()),v={exports:{}},E={name:"dotenv",version:"16.4.6",description:"Loads environment variables from .env file",main:"lib/main.js",types:"lib/main.d.ts",exports:{".":{types:"./lib/main.d.ts",require:"./lib/main.js",default:"./lib/main.js"},"./config":"./config.js","./config.js":"./config.js","./lib/env-options":"./lib/env-options.js","./lib/env-options.js":"./lib/env-options.js","./lib/cli-options":"./lib/cli-options.js","./lib/cli-options.js":"./lib/cli-options.js","./package.json":"./package.json"},scripts:{"dts-check":"tsc --project tests/types/tsconfig.json",lint:"standard",pretest:"npm run lint && npm run dts-check",test:"tap run --allow-empty-coverage --disable-coverage --timeout=60000","test:coverage":"tap run --show-full-coverage --timeout=60000 --coverage-report=lcov",prerelease:"npm test",release:"standard-version"},repository:{type:"git",url:"git://github.com/motdotla/dotenv.git"},funding:"https://dotenvx.com",keywords:["dotenv","env",".env","environment","variables","config","settings"],readmeFilename:"README.md",license:"BSD-2-Clause",devDependencies:{"@types/node":"^18.11.3",decache:"^4.6.2",sinon:"^14.0.1",standard:"^17.0.0","standard-version":"^9.5.0",tap:"^19.2.0",typescript:"^4.8.4"},engines:{node:">=12"},browser:{fs:!1}};var g,h=function(){if(f)return v.exports;f=1;const e=n,t=o,c=r,i=s,a=E.version,l=/(?:^|^)\s*(?:export\s+)?([\w.-]+)(?:\s*=\s*?|:\s+?)(\s*'(?:\\'|[^'])*'|\s*"(?:\\"|[^"])*"|\s*`(?:\\`|[^`])*`|[^#\r\n]+)?\s*(?:#.*)?(?:$|$)/gm;function p(e){console.log(`[dotenv@${a}][DEBUG] ${e}`)}function u(e){return e&&e.DOTENV_KEY&&e.DOTENV_KEY.length>0?e.DOTENV_KEY:process.env.DOTENV_KEY&&process.env.DOTENV_KEY.length>0?process.env.DOTENV_KEY:""}function d(e,t){let n;try{n=new URL(t)}catch(e){if("ERR_INVALID_URL"===e.code){const e=new Error("INVALID_DOTENV_KEY: Wrong format. Must be in valid uri format like dotenv://:key_1234@dotenvx.com/vault/.env.vault?environment=development");throw e.code="INVALID_DOTENV_KEY",e}throw e}const o=n.password;if(!o){const e=new Error("INVALID_DOTENV_KEY: Missing key part");throw e.code="INVALID_DOTENV_KEY",e}const r=n.searchParams.get("environment");if(!r){const e=new Error("INVALID_DOTENV_KEY: Missing environment part");throw e.code="INVALID_DOTENV_KEY",e}const s=`DOTENV_VAULT_${r.toUpperCase()}`,c=e.parsed[s];if(!c){const e=new Error(`NOT_FOUND_DOTENV_ENVIRONMENT: Cannot locate environment ${s} in your .env.vault file.`);throw e.code="NOT_FOUND_DOTENV_ENVIRONMENT",e}return{ciphertext:c,key:o}}function g(n){let o=null;if(n&&n.path&&n.path.length>0)if(Array.isArray(n.path))for(const t of n.path)e.existsSync(t)&&(o=t.endsWith(".vault")?t:`${t}.vault`);else o=n.path.endsWith(".vault")?n.path:`${n.path}.vault`;else o=t.resolve(process.cwd(),".env.vault");return e.existsSync(o)?o:null}function h(e){return"~"===e[0]?t.join(c.homedir(),e.slice(1)):e}const y={configDotenv:function(n){const o=t.resolve(process.cwd(),".env");let r="utf8";const s=Boolean(n&&n.debug);n&&n.encoding?r=n.encoding:s&&p("No encoding is specified. UTF-8 is used by default");let c,i=[o];if(n&&n.path)if(Array.isArray(n.path)){i=[];for(const e of n.path)i.push(h(e))}else i=[h(n.path)];const a={};for(const t of i)try{const o=y.parse(e.readFileSync(t,{encoding:r}));y.populate(a,o,n)}catch(e){s&&p(`Failed to load ${t} ${e.message}`),c=e}let l=process.env;return n&&null!=n.processEnv&&(l=n.processEnv),y.populate(l,a,n),c?{parsed:a,error:c}:{parsed:a}},_configVault:function(e){var t;t="Loading env from encrypted .env.vault",console.log(`[dotenv@${a}][INFO] ${t}`);const n=y._parseVault(e);let o=process.env;return e&&null!=e.processEnv&&(o=e.processEnv),y.populate(o,n,e),{parsed:n}},_parseVault:function(e){const t=g(e),n=y.configDotenv({path:t});if(!n.parsed){const e=new Error(`MISSING_DATA: Cannot parse ${t} for an unknown reason`);throw e.code="MISSING_DATA",e}const o=u(e).split(","),r=o.length;let s;for(let e=0;e<r;e++)try{const t=d(n,o[e].trim());s=y.decrypt(t.ciphertext,t.key);break}catch(t){if(e+1>=r)throw t}return y.parse(s)},config:function(e){if(0===u(e).length)return y.configDotenv(e);const t=g(e);return t?y._configVault(e):(n=`You set DOTENV_KEY but you are missing a .env.vault file at ${t}. Did you forget to build it?`,console.log(`[dotenv@${a}][WARN] ${n}`),y.configDotenv(e));var n},decrypt:function(e,t){const n=Buffer.from(t.slice(-64),"hex");let o=Buffer.from(e,"base64");const r=o.subarray(0,12),s=o.subarray(-16);o=o.subarray(12,-16);try{const e=i.createDecipheriv("aes-256-gcm",n,r);return e.setAuthTag(s),`${e.update(o)}${e.final()}`}catch(e){const t=e instanceof RangeError,n="Invalid key length"===e.message,o="Unsupported state or unable to authenticate data"===e.message;if(t||n){const e=new Error("INVALID_DOTENV_KEY: It must be 64 characters long (or more)");throw e.code="INVALID_DOTENV_KEY",e}if(o){const e=new Error("DECRYPTION_FAILED: Please check your DOTENV_KEY");throw e.code="DECRYPTION_FAILED",e}throw e}},parse:function(e){const t={};let n,o=e.toString();for(o=o.replace(/\r\n?/gm,"\n");null!=(n=l.exec(o));){const e=n[1];let o=n[2]||"";o=o.trim();const r=o[0];o=o.replace(/^(['"`])([\s\S]*)\1$/gm,"$2"),'"'===r&&(o=o.replace(/\\n/g,"\n"),o=o.replace(/\\r/g,"\r")),t[e]=o}return t},populate:function(e,t,n={}){const o=Boolean(n&&n.debug),r=Boolean(n&&n.override);if("object"!=typeof t){const e=new Error("OBJECT_REQUIRED: Please check the processEnv argument being passed to populate");throw e.code="OBJECT_REQUIRED",e}for(const n of Object.keys(t))Object.prototype.hasOwnProperty.call(e,n)?(!0===r&&(e[n]=t[n]),o&&p(!0===r?`"${n}" is already defined and WAS overwritten`:`"${n}" is already defined and was NOT overwritten`)):e[n]=t[n]}};return v.exports.configDotenv=y.configDotenv,v.exports._configVault=y._configVault,v.exports._parseVault=y._parseVault,v.exports.config=y.config,v.exports.decrypt=y.decrypt,v.exports.parse=y.parse,v.exports.populate=y.populate,v.exports=y,v.exports}(),y={};var b=function(){if(g)return y;function e(e){return e.replace(/\\\$/g,"$")}function t(e,t,n){const o={...n,...t},r=/(?<!\\)\${([^{}]+)}|(?<!\\)\$([A-Za-z_][A-Za-z0-9_]*)/g;let s,c=e;const i=new Set;for(;null!==(s=r.exec(c));){i.add(c);const[e,t,a]=s,l=t||a,p=/(:\+|\+|:-|-)/,u=l.match(p),f=u?u[0]:null,d=l.split(f);let v,E;const g=d.shift();if([":+","+"].includes(f)?(v=o[g]?d.join(f):"",E=null):(v=d.join(f),E=o[g]),c=E?i.has(E)?c.replace(e,v):c.replace(e,E):c.replace(e,v),c===n[g])break;r.lastIndex=0}return c}return g=1,y.expand=function(n){const o={};let r=process.env;n&&null!=n.processEnv&&(r=n.processEnv);for(const s in n.parsed){let c=n.parsed[s];c=r[s]&&r[s]!==c?r[s]:t(c,r,o),n.parsed[s]=e(c),o[s]=e(c)}for(const e in n.parsed)r[e]=n.parsed[e];return n},y}();const _="undefined"!=typeof process&&"win32"===process.platform,m=/\\/g;function O(e){return t.posix.normalize(_?e.replace(m,"/"):e)}exports.getCurrentMode=function(){const{mode:e,_:t}=d(process.argv.slice(2));if(e)return e;switch(t[0]){case"serve":default:return"development";case"build":return"production";case"test":return"test"}},exports.loadEnv=function(t,n,o="VITE_",r=!0){if("local"===t)throw new Error('"local" cannot be used as a mode name because it conflicts with the .local postfix for .env files.');var s;s=o,o=Array.isArray(s)?s:[s];const c={},i=function(e,t){return[".env",".env.local",`.env.${e}`,`.env.${e}.local`].map((e=>O(p.join(t,e))))}(t,n),a=Object.fromEntries(i.flatMap((t=>function(t){try{return e.statSync(t,{throwIfNoEntry:!1})}catch{}}(t)?.isFile()?Object.entries(h.parse(l.readFileSync(t))):[])));if(a.NODE_ENV&&void 0===process.env.VITE_USER_NODE_ENV&&(process.env.VITE_USER_NODE_ENV=a.NODE_ENV),a.BROWSER&&void 0===process.env.BROWSER&&(process.env.BROWSER=a.BROWSER),a.BROWSER_ARGS&&void 0===process.env.BROWSER_ARGS&&(process.env.BROWSER_ARGS=a.BROWSER_ARGS),r){const e={...process.env};b.expand({parsed:a,processEnv:e})}for(const[e,t]of Object.entries(a))o.some((t=>e.startsWith(t)))&&(c[e]=t);if(r)for(const e in process.env)o.some((t=>e.startsWith(t)))&&(c[e]=process.env[e]);return c},exports.pluginName="env-enhance";
